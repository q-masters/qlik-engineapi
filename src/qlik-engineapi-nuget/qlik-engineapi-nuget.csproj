<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net452;netcoreapp2.0;netcoreapp2.1</TargetFrameworks>    
    <RootNamespace>Qlik.EngineAPI</RootNamespace>
    <AssemblyName>qlik-engineapi</AssemblyName>    

    <Company />
    <Product>XAML Markup Extensions</Product>
    <Authors>Konrad Mattheis, Martin Berthold</Authors>
    <RepositoryUrl>https://github.com/q-masters/qlik-engineapi.git</RepositoryUrl>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/q-masters/qlik-engineapi</PackageProjectUrl>   
    <Description>Automated Classes for the Qlik EngineAPI</Description>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes></PackageReleaseNotes>    
    <PackageTags>qlik sense engine engineapi</PackageTags>

    <Version>$(GitVersion_NuGetVersion)</Version>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>

    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\LICENSE" Pack="true" PackagePath=""/>
    <None Remove="packages.lock.json" />
  </ItemGroup>
  
  <Choose>
    <When Condition="'$(Configuration)' == 'Release'">
      <PropertyGroup>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="GitVersionTask" Version="5.5.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>

  <!-->Target Name="CheckFileAvailable" BeforeTargets="BeforeBuild">
    <Error Text="Codefiles have to be generated" Condition="!Exists('$(ProjectDir)\Interfaces.cs')" />    
  </Target-->

  <Target Name="PublishToNugetWithAPIKey" AfterTargets="GenerateNuspec">
    <ReadLinesFromFile Condition="Exists('$(SolutionDir)\..\..\nugetapikey.txt')" File="$(SolutionDir)\..\..\nugetapikey.txt">
      <Output TaskParameter="Lines" PropertyName="NugetAPIKey" />
    </ReadLinesFromFile>
    <Exec Condition="('$(NugetAPIKey)' != '')" WorkingDirectory="$(BaseDir)" Command="dotnet nuget push $(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg -k $(NugetAPIKey) -s https://api.nuget.org/v3/index.json" />
  </Target>

  <Target Name="DeleteFiles" AfterTargets="Clean">
    <ItemGroup>
      <FilesToClean Include="$(ProjectDir)\*.cs" />
    </ItemGroup>
    <Delete Files="@(FilesToClean)" />
  </Target>

  <Target Name="FixOnGitVersionTaskError" BeforeTargets="GetAssemblyVersion">
    <CreateProperty Value="0.0.1-notgitversion" Condition="'$(GitVersion_NuGetVersion)' == ''">
      <Output TaskParameter="Value" PropertyName="Version" />
    </CreateProperty>
  </Target>
</Project>